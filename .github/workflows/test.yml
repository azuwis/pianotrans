name: Test
permissions: {}
on:
  pull_request:
    paths-ignore:
    - '**.md'
    - 'screenshots/**'
    - 'windows/**'
  push:
    paths-ignore:
    - '**.md'
    - 'screenshots/**'
    - 'windows/**'
  workflow_dispatch:
    inputs:
      debug:
        description: Enable debug
        type: boolean
        required: false
        default: false
      os:
        description: OS to run
        type: choice
        options:
          - linux
          - darwin
          - aarch64-linux
          - x86_64-linux
          - aarch64-darwin
          - x86_64-darwin
          - all
        default: all
      shell:
        description: Variant to run
        type: choice
        options:
          - shell
          - shell-bin
          - shell-cuda
          - shell-mkl
          - all
        default: all
jobs:
  transcribe:
    strategy:
      fail-fast: false
      matrix:
        os: >-
          ${{ fromJSON(
            inputs.os == 'linux' && '["ubuntu-latest", "ubuntu-24.04-arm"]' || (
            inputs.os == 'darwin' && '["macos-latest", "macos-13"]' || (
            inputs.os == 'aarch64-linux' && '["ubuntu-24.04-arm"]' || (
            inputs.os == 'x86_64-linux' && '["ubuntu-latest"]' || (
            inputs.os == 'aarch64-darwin' && '["macos-latest"]' || (
            inputs.os == 'x86_64-darwin' && '["macos-13"]' || (
            '["ubuntu-24.04-arm", "ubuntu-latest", "macos-latest", "macos-13"]'
          ))))))) }}
        shell: >-
          ${{ fromJSON(
            inputs.os == 'shell' && '["shell"]' || (
            inputs.os == 'shell-bin' && '["shell-bin"]' || (
            inputs.os == 'shell-cuda' && '["shell-cuda"]' || (
            inputs.os == 'shell-mkl' && '["shell-mkl"]' || (
            '["shell", "shell-bin", "shell-cuda", "shell-mkl"]'
          ))))) }}
        exclude:
        - {shell: shell-bin, os: macos-13}
        - {shell: shell-cuda, os: ubuntu-24.04-arm}
        - {shell: shell-cuda, os: macos-latest}
        - {shell: shell-cuda, os: macos-13}
        - {shell: shell-mkl, os: ubuntu-24.04-arm}
        - {shell: shell-mkl, os: macos-latest}
        - {shell: shell-mkl, os: macos-13}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - uses: azuwis/actions/nix@main
      with:
        key: nix-${{ matrix.shell }}
        debug: ${{ inputs.debug }}
    - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
      with:
        name: azuwis
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: nix-community
        # pushFilter: (-source$|\.whl$)
    - name: Build nix devShell
      run: |
        # build nix devShell, and create profile to prevent gc
        echo "Build nix devShell"
        nix -L develop .#${{ matrix.shell }} --profile ~/.local/state/nix/profiles/shell --command true
    - name: Test transcribe
      run: |
        nix -L develop .#${{ matrix.shell }} --command ./PianoTrans.py --cli test/cut_liszt.opus test/cut_liszt.opus test/cut_liszt.opus | tee /tmp/transcribe.log
        time=$(awk 'BEGIN {ORS=" "} /Transcribe time:/ {print $3}' /tmp/transcribe.log)
        echo "::notice::Transcribe time: $time"
        test -e test/cut_liszt.opus.mid
    - uses: azuwis/actions/nix/post@main
